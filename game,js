const GameState = Object.freeze({
    WELCOMING:   Symbol("welcome"),
    OPEN:  Symbol("open"),
    NOT: Symbol("not"),
    DO: Symbol("do"),
    GO: Symbol("go"),
    FIND: Symbol("find"),
    HALL: Symbol("hall"),
    BEHIND_SOFA: Symbol("behind-sofa"),
    SIDE_DRAWER: Symbol("side-drawer"),
    BEDROOM: Symbol("bedroom"),
    DRAWER: Symbol("drawer"),
    CLOSET: Symbol("closet"),
    KITCHEN: Symbol("kitchen"),
    OVEN: Symbol("oven"),
    CUPBOARD: Symbol("cupboard"),
    STORE_ROOM: Symbol("store-room"),
    CHECK: Symbol("check"),
    FINISH: Symbol("finish")
    
});

export default class Game{
    constructor(){
        this.stateCur = GameState.WELCOMING;
    }
    
    makeAMove(sInput)
    {
        let sReply = "";
        switch(this.stateCur){
            case GameState.WELCOMING:
                sReply = "Welcome, I have a halloween story book. Do you want to OPEN it or not..?";
                this.stateCur = GameState.OPEN;
                break;

            case GameState.OPEN:
                if(sInput.toLowerCase().match("open")){
                    sReply = "Here is some tasks which you have to do. Are you ready to DO or not..??";
                    this.stateCur = GameState.DO;
                }else{
                    sReply ="oops,you can not close book until you do not finish game...";
                    this.stateCur = GameState.NOT;
                }
                break;
         
            case GameState.DO:
                if(sInput.toLowerCase().match("do")){
                    sReply = "Now, you entered into hunted house and find a box full of diamonds. Are you ready for FIND or not...?";
                    this.stateCur = GameState.FIND;

                }else{
                    sReply = "oops,you can not close book until you do not finish game...";
                    this.stateCur = GameState.NOT;
    
                }
                break;
                
                case GameState.FIND:
                if(sInput.toLowerCase().match("find")){
                    sReply = "Its not easy as you think to find diamonds in the hunted house. Do you want to start searching from HALL or not? ";
                    this.stateCur = GameState.HALL;

                }else{
                    sReply = "oops,you can not close book until you do not finish game...";
                    this.stateCur = GameState.NOT;
    
                }
                break;

                case GameState.HALL:
                if(sInput.toLowerCase().match("hall")){
                    sReply = "You are in Hall now. Do you want to search BEHIND-SOFA or not?";
                    this.stateCur = GameState.BEHIND_SOFA;

                }else{
                    sReply = "oops,you can not close book until you do not finish game...";
                    this.stateCur = GameState.NOT;
    
                }
                break;


                case GameState.BEHIND_SOFA:
                if(sInput.toLowerCase().match("behind-sofa")){
                    sReply = "Oopps!!.... There is nothing behind the sofa. HAHAHA... Do you want to try to find in SIDE-DRAWER?";
                    this.stateCur = GameState.SIDE_DRAWER;

                }else{
                    sReply = "oops,you can not close book until you do not finish game...";
                    this.stateCur = GameState.NOT;
    
                }
                break;

                case GameState.SIDE_DRAWER:
                if(sInput.toLowerCase().match("side-drawer")){
                    sReply = "Oopps!!.... There is only a tiny halloween pumpkin. HAHAHA... Do you want to try to find in BEDROOM?";
                    this.stateCur = GameState.BEDROOM;

                }else{
                    sReply = "oops,you can not close book until you do not finish game...";
                    this.stateCur = GameState.NOT;
    
                }
                break;

                case GameState.BEDROOM:
                if(sInput.toLowerCase().match("bedroom")){
                    sReply = "You are in bedroom now. Do you want to search in the DRAWER? ";
                    this.stateCur = GameState.DRAWER;

                }else{
                    sReply = "oops,you can not close book until you do not finish game...";
                    this.stateCur = GameState.NOT;
    
                }
                break;

                case GameState.DRAWER:
                if(sInput.toLowerCase().match("drawer")){
                    sReply = "Oopps!!.... There is a halloween necklace. HAHAHA... Do you want to try to find in CLOSET?";
                    this.stateCur = GameState.CLOSET;

                }else{
                    sReply = "oops,you can not close book until you do not finish game...";
                    this.stateCur = GameState.NOT;
    
                }
                break;

                case GameState.CLOSET:
                if(sInput.toLowerCase().match("closet")){
                    sReply = "Oopps!!.... There is a dummy skeleton inside the closet. HAHAHA... Do you want to try to find in KITCHEN?";
                    this.stateCur = GameState.KITCHEN;

                }else{
                    sReply = "oops,you can not close book until you do not finish game...";
                    this.stateCur = GameState.NOT;
    
                }
                break;

                case GameState.KITCHEN:
                if(sInput.toLowerCase().match("kitchen")){
                    sReply = "You are in kitchen now. Do you want to search inside the OVEN or not?";
                    this.stateCur = GameState.OVEN;

                }else{
                    sReply = "oops,you can not close book until you do not finish game...";
                    this.stateCur = GameState.NOT;
    
                }
                break;

                case GameState.OVEN:
                if(sInput.toLowerCase().match("oven")){
                    sReply = "Oopps!!.... There is an empty pizza box inside the oven. HAHAHA... Do you want to try to find in CUPBOARD or not?";
                    this.stateCur = GameState.CUPBOARD;

                }else{
                    sReply = "oops,you can not close book until you do not finish game...";
                    this.stateCur = GameState.NOT;
    
                }
                break;

                case GameState.CUPBOARD:
                if(sInput.toLowerCase().match("cupboard")){
                    sReply = "Oopps!!.... There are black spiders inside the cupboard. HAHAHA... Do you want to try to find in the STORE-ROOM or not?";
                    this.stateCur = GameState.STORE_ROOM;

                }else{
                    sReply = "oops,you can not close book until you do not finish game...";
                    this.stateCur = GameState.NOT;
    
                }
                break;

                case GameState.STORE_ROOM:
                if(sInput.toLowerCase().match("store-room")){
                    sReply = "You are in store-room now. There is a cardboard box inside the store-room. Do you want to CHECK it or not?";
                    this.stateCur = GameState.CHECK;

                }else{
                    sReply = "oops,you can not close book until you do not finish game...";
                    this.stateCur = GameState.NOT;
    
                }
                break;

                case GameState.CHECK:
                if(sInput.toLowerCase().match("check")){
                    sReply = "Great !  There is a box inside the cardboard box which is full of diamonds.";
                    this.stateCur = GameState.FINISH;

                }else{
                    sReply = "oops,you can not close book until you do not finish game...";
                    this.stateCur = GameState.NOT;
    
                }
                break;

        }
        return([sReply]);
    }
}
